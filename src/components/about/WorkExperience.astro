---
import { getCollection } from 'astro:content'
import FormattedDate from '../reuseable/FormattedDate.astro'
import Chips from '../reuseable/Chips.astro'
import WorkExperienceContent from './WorkExperienceContent.astro'
import SectionHeading from '../reuseable/SectionHeading.astro'

const works = (await getCollection('work')).sort(
	(a, b) => b.data.startDate.valueOf() - a.data.startDate.valueOf()
)
---

<div>
	<SectionHeading class="mb-9" title="Work experience." />
	<div class="mb-4">
		<ul
			class="-mb-px flex flex-wrap justify-start gap-3 text-center md:justify-center"
			id="default-tab"
			data-tabs-toggle="#default-tab-content"
			role="tablist"
			data-tabs-active-classes="bg-primary/10 text-black"
			data-tabs-inactive-classes="bg-white text-black"
		>
			{
				works.map((work) => (
					<li role="presentation">
						<button
							class="inline-block px-3 py-2 !text-black hover:bg-violet-50 aria-selected:bg-primary/10 aria-selected:text-black"
							id={work.slug + '-tab'}
							data-tabs-target={'#' + work.slug}
							type="button"
							role="tab"
							aria-controls={work.slug}
							aria-selected="false"
						>
							{work.data.title}
						</button>
					</li>
				))
			}
		</ul>
	</div>
	<div id="default-tab-content">
		{
			works.map((work) => (
				<div class="hidden" id={work.slug} role="tabpanel" aria-labelledby={work.slug + '-tab'}>
					<div class="flex flex-col gap-9 md:flex-row">
						<div class="flex w-full flex-col gap-3 md:w-1/3">
							<div class="flex flex-col">
								<div class="flex gap-3">
									<FormattedDate date={work.data.startDate} /> -{' '}
									{(work.data.endDate && <FormattedDate date={work.data.endDate} />) || 'Present'}
								</div>
								<h3 class="text-primary">{work.data.company}</h3>
							</div>
							<div class="flex flex-col gap-3">
								<h4>Technologies:</h4>
								<Chips data={work.data.technologies} />
							</div>
						</div>
						<div class="work w-full md:w-2/3">
							<WorkExperienceContent work={work} />
						</div>
					</div>
				</div>
			))
		}
	</div>
</div>
<script data-astro-rerun>
	document.addEventListener('astro:page-load', function () {
		const tabs = document.querySelectorAll('[role="tab"]')
		const tabContents = document.querySelectorAll('[role="tabpanel"]')
		if (tabs.length > 0) {
			const firstTab = tabs[0] // Get the first tab

			// Add the 'selected' class to the first tab and its content
			firstTab.setAttribute('aria-selected', 'true')
			tabContents[0].classList.remove('hidden')
		}

		tabs.forEach((tab) => {
			tab.addEventListener('click', function () {
				// Remove the 'hidden' class from all tab content
				const tabContents = document.querySelectorAll('[role="tabpanel"]')
				tabContents.forEach((content) => {
					content.classList.add('hidden')
				})

				// Add the 'hidden' class to all tabs
				tabs.forEach((t) => {
					t.setAttribute('aria-selected', 'false')
				})

				// Set the clicked tab as selected
				this.setAttribute('aria-selected', 'true')

				// Show the corresponding tab content
				const tabId = this.getAttribute('aria-controls')
				const tabContent = document.getElementById(tabId)
				tabContent.classList.remove('hidden')
			})
		})
	})
</script>
